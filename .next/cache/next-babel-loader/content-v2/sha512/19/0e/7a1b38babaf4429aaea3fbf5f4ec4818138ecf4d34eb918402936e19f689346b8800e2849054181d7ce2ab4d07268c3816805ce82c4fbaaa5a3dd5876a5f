{"ast":null,"code":"import initDB from '../../helpers/initDB';\nimport User from '../../models/User';\nimport bcrypt from 'bcryptjs';\ninitDB();\nexport default (async (req, res) => {\n  const {\n    name,\n    surname,\n    email,\n    password\n  } = req.body;\n\n  try {\n    if (!name || !surname || !email || !password) {\n      return res.status(422).json({\n        error: \"Lütfen tüm alanları doldurunuz.\"\n      });\n    }\n\n    const user = await User.findOne({\n      email\n    });\n\n    if (user) {\n      return res.status(422).json({\n        error: \"Bu mail adresiyle bir kullanıcı bulunmakta.\"\n      });\n    }\n\n    const hashedPassword = await bcrypt.hash(password, 12);\n    const newUser = await new User({\n      name,\n      email,\n      password: hashedPassword\n    }).save();\n    console.log(newUser);\n    res.status(201).json({\n      message: \"Kayıt Başarılı\"\n    });\n  } catch (err) {\n    console.log(err);\n  }\n});","map":{"version":3,"sources":["D:/React/speechtt/pages/api/signup.js"],"names":["initDB","User","bcrypt","req","res","name","surname","email","password","body","status","json","error","user","findOne","hashedPassword","hash","newUser","save","console","log","message","err"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAGAF,MAAM;AAEN,gBAAe,OAAOG,GAAP,EAAWC,GAAX,KAAiB;AAC5B,QAAM;AAACC,IAAAA,IAAD;AAAMC,IAAAA,OAAN;AAAcC,IAAAA,KAAd;AAAoBC,IAAAA;AAApB,MAAgCL,GAAG,CAACM,IAA1C;;AACA,MAAG;AACC,QAAG,CAACJ,IAAD,IAAS,CAACC,OAAV,IAAqB,CAACC,KAAtB,IAA+B,CAACC,QAAnC,EAA4C;AACzC,aAAOJ,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,QAAAA,KAAK,EAAC;AAAP,OAArB,CAAP;AACF;;AACD,UAAMC,IAAI,GAAG,MAAMZ,IAAI,CAACa,OAAL,CAAa;AAACP,MAAAA;AAAD,KAAb,CAAnB;;AACA,QAAGM,IAAH,EAAQ;AACJ,aAAOT,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,QAAAA,KAAK,EAAC;AAAP,OAArB,CAAP;AACH;;AACD,UAAMG,cAAc,GAAE,MAAMb,MAAM,CAACc,IAAP,CAAYR,QAAZ,EAAqB,EAArB,CAA5B;AACA,UAAMS,OAAO,GAAG,MAAM,IAAIhB,IAAJ,CAAS;AAC3BI,MAAAA,IAD2B;AAE3BE,MAAAA,KAF2B;AAG3BC,MAAAA,QAAQ,EAACO;AAHkB,KAAT,EAInBG,IAJmB,EAAtB;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACAb,IAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACU,MAAAA,OAAO,EAAC;AAAT,KAArB;AAEH,GAjBD,CAiBC,OAAMC,GAAN,EAAU;AACPH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACH;AACJ,CAtBD","sourcesContent":["import initDB from '../../helpers/initDB'\r\nimport User from '../../models/User'\r\nimport bcrypt from 'bcryptjs'\r\n\r\n\r\ninitDB()\r\n\r\nexport default async (req,res)=>{\r\n    const {name,surname,email,password} = req.body\r\n    try{\r\n        if(!name || !surname || !email || !password){\r\n           return res.status(422).json({error:\"Lütfen tüm alanları doldurunuz.\"})\r\n        }    \r\n        const user = await User.findOne({email})\r\n        if(user){\r\n            return res.status(422).json({error:\"Bu mail adresiyle bir kullanıcı bulunmakta.\"})\r\n        }  \r\n        const hashedPassword= await bcrypt.hash(password,12)  \r\n        const newUser = await new User({\r\n            name,\r\n            email,\r\n            password:hashedPassword\r\n        }).save()\r\n        console.log(newUser)\r\n        res.status(201).json({message:\"Kayıt Başarılı\"})\r\n\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}